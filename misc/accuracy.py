import pandas as pd
import matplotlib.pyplot as plt


# noise = 0.0
# data_last_epoch = {
#     'Hidden Dimensions':  [2, 4, 8, 16, 20, 24, 28, 32, 36, 40, 45, 46, 48, 50, 52, 54, 55, 60, 64, 70, 75, 80, 85, 90, 95, 128, 200, 256, 300, 400,  512, 600, 800, 900, 1024],
#     'test_accuracy':[0.4188, 0.5961, 0.7306, 0.8964, 0.8986, 0.9136, 0.9189, 0.9174, 0.9197, 0.9198, 0.9265, 0.9257, 0.9279, 0.928, 0.9339, 0.9285, 0.9343, 0.9359, 0.9369, 0.9405, 0.939, 0.9423, 0.9436, 0.946, 0.9445, 0.9471, 0.9503, 0.9519, 0.9533, 0.9548, 0.9529, 0.9521, 0.9509, 0.9523, 0.9499],
#     'train_accuracy': [0.4089454545454545, 0.5884363636363636, 0.7312, 0.9178909090909092, 0.9317636363636363, 0.9571636363636364, 0.9754363636363635, 0.9874909090909092, 0.9929272727272728, 0.998381818181818, 0.9998545454545454, 0.9997272727272728, 0.9999272727272728, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
#     # 'val_accuracy': [0.4132,0.5996,0.7298, 0.9,0.9032, 0.9122, 0.9136, 0.9146, 0.9176, 0.916, 0.9258, 0.9272, 0.933, 0.9294, 0.9372, 0.9256, 0.9336, 0.9368, 0.938, 0.9442, 0.9434, 0.9438, 0.9454, 0.9472, 0.948, 0.9498, 0.9566, 0.9572, 0.9548, 0.9586 ]

# }

# noise 0.20
# data_last_epoch = {
#     'Hidden Dimensions':[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 22, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 80, 90, 100, 120, 130, 140, 150, 160, 170, 180, 190, 200, 400, 600, 800, 1000],
#     'test_accuracy_last': [0.2306, 0.3164, 0.3784, 0.4389, 0.5043, 0.5304, 0.5654, 0.5948, 0.5853, 0.6178, 0.6697, 0.694, 0.6953, 0.7101, 0.7077, 0.7012, 0.7163, 0.7087, 0.6976, 0.6855, 0.6763, 0.6628, 0.6492, 0.6301, 0.6147, 0.6166, 0.6, 0.5973, 0.6011, 0.6092, 0.6241, 0.6356, 0.6347, 0.6376, 0.6454, 0.6502, 0.6564, 0.6519, 0.6772, 0.6855, 0.6896, 0.6942],
#     # 'train_accuracy': [0.2348727272727272, 0.3145818181818182, 0.3734363636363636, 0.4286363636363636, 0.4932727272727272, 0.5253272727272728, 0.5652727272727273, 0.5881636363636363, 0.5822909090909091, 0.6178, 0.6792181818181818, 0.6996909090909091, 0.7061272727272727, 0.7238181818181818, 0.7295090909090909, 0.7297818181818182, 0.7462363636363636, 0.7502, 0.7628363636363636, 0.761109090909091, 0.7730363636363636, 0.7682545454545454, 0.7689818181818182, 0.7861272727272727, 0.7585090909090909, 0.7527818181818182, 0.7611454545454546, 0.7682545454545454, 0.7481454545454546, 0.7388727272727272, 0.7571272727272728, 0.7658545454545455, 0.7602545454545454, 0.7547090909090909, 0.7606, 0.7656727272727273, 0.7761818181818182, 0.7791818181818182, 0.7657272727272727, 0.7558909090909091, 0.7766545454545455, 0.7333454545454545, 0.7457818181818182],
#     'test_accuracy_best': [0.2349, 0.3261, 0.3845, 0.4423, 0.5067, 0.5309, 0.5718, 0.5972, 0.5861, 0.6201, 0.6762, 0.695, 0.6967, 0.7115, 0.7105, 0.7028, 0.7175, 0.7125, 0.707, 0.6992, 0.7002, 0.6945, 0.7016, 0.6762, 0.679, 0.6995, 0.6694, 0.6888, 0.6787, 0.688, 0.6963, 0.6977, 0.6745, 0.6738, 0.706, 0.6855, 0.7021, 0.6696, 0.7112, 0.6957, 0.6983, 0.6991],
#     'val_accuracy':  [0.2284, 0.3102, 0.3762, 0.4392, 0.495, 0.5234, 0.5676, 0.587, 0.5796, 0.6082, 0.673, 0.6848, 0.694, 0.702, 0.7042, 0.7026, 0.7098, 0.7142, 0.7074, 0.689, 0.6926, 0.6914, 0.6894, 0.6716, 0.671, 0.6956, 0.664, 0.679, 0.6748, 0.6762, 0.6936, 0.6972, 0.6714, 0.67, 0.7056, 0.6844, 0.696, 0.6634, 0.7096, 0.6926, 0.6914, 0.6912]
# }

# noise 0.20 with sgd 0.9 0.01
# data_last_epoch = {
#     'Hidden Dimensions':[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 22, 25, 30, 35, 40, 45, 50, 55, 60, 70, 80, 90, 100, 120, 140, 150, 160, 200, 300, 400, 500, 600, 700, 800, 900, 1000],
#     'test_accuracy': [0.2413, 0.3236, 0.391, 0.4602, 0.4958, 0.528, 0.5377, 0.5987, 0.6244, 0.6073, 0.6663, 0.6927, 0.7021, 0.7083, 0.704, 0.712, 0.7195, 0.7206, 0.7187, 0.7124, 0.7102, 0.7161, 0.6988, 0.6956, 0.6719, 0.6653, 0.6411, 0.6404, 0.6334, 0.6278, 0.619, 0.6209, 0.6296, 0.6428, 0.6495, 0.6645, 0.6659, 0.6702, 0.6773, 0.6749, 0.6789],
#     'train_accuracy': [0.2374181818181818, 0.3212, 0.3856181818181818, 0.4484363636363636, 0.4872909090909091, 0.5212363636363636, 0.5333272727272728, 0.5953272727272727, 0.6164181818181819, 0.6049818181818182, 0.6640181818181818, 0.6924, 0.7041090909090909, 0.7192727272727273, 0.7156727272727272, 0.7254181818181819, 0.7353454545454545, 0.7537090909090909, 0.7555636363636363, 0.7615454545454545, 0.7707090909090909, 0.7641818181818182, 0.7864181818181818, 0.787309090909091, 0.8126727272727273, 0.8271636363636363, 0.8862, 0.8800181818181818, 0.9016727272727272, 0.9438181818181818, 0.9975818181818182, 0.9984545454545456, 0.9999636363636364, 1.0, 1.0, 1.0, 1.0, 0.9999818181818182, 1.0, 1.0, 1.0]
#     # 'train_accuracy': [0.2348727272727272, 0.3145818181818182, 0.3734363636363636, 0.4286363636363636, 0.4932727272727272, 0.5253272727272728, 0.5652727272727273, 0.5881636363636363, 0.5822909090909091, 0.6178, 0.6792181818181818, 0.6996909090909091, 0.7061272727272727, 0.7238181818181818, 0.7295090909090909, 0.7297818181818182, 0.7462363636363636, 0.7502, 0.7628363636363636, 0.761109090909091, 0.7730363636363636, 0.7682545454545454, 0.7689818181818182, 0.7861272727272727, 0.7585090909090909, 0.7527818181818182, 0.7611454545454546, 0.7682545454545454, 0.7481454545454546, 0.7388727272727272, 0.7571272727272728, 0.7658545454545455, 0.7602545454545454, 0.7547090909090909, 0.7606, 0.7656727272727273, 0.7761818181818182, 0.7791818181818182, 0.7657272727272727, 0.7558909090909091, 0.7766545454545455, 0.7333454545454545, 0.7457818181818182],
#     # 'test_accuracy_best': [0.2349, 0.3261, 0.3845, 0.4423, 0.5067, 0.5309, 0.5718, 0.5972, 0.5861, 0.6201, 0.6762, 0.695, 0.6967, 0.7115, 0.7105, 0.7028, 0.7175, 0.7125, 0.707, 0.6992, 0.7002, 0.6945, 0.7016, 0.6762, 0.679, 0.6995, 0.6694, 0.6888, 0.6787, 0.688, 0.6963, 0.6977, 0.6745, 0.6738, 0.706, 0.6855, 0.7021, 0.6696, 0.7112, 0.6957, 0.6983, 0.6991],
#     # 'val_accuracy':  [0.2284, 0.3102, 0.3762, 0.4392, 0.495, 0.5234, 0.5676, 0.587, 0.5796, 0.6082, 0.673, 0.6848, 0.694, 0.702, 0.7042, 0.7026, 0.7098, 0.7142, 0.7074, 0.689, 0.6926, 0.6914, 0.6894, 0.6716, 0.671, 0.6956, 0.664, 0.679, 0.6748, 0.6762, 0.6936, 0.6972, 0.6714, 0.67, 0.7056, 0.6844, 0.696, 0.6634, 0.7096, 0.6926, 0.6914, 0.6912]
# }

# # noise 0.20 with sgd 0.9 0.01
# data_last_epoch = {
#     'Hidden Dimensions':[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 22, 25, 30, 35, 40, 45, 50, 55, 60, 70, 80, 85, 90, 95, 100, 105, 108, 110, 112, 115, 120, 125, 130, 140, 150, 160, 170, 180, 200, 300, 400, 500, 600, 700, 800, 900, 1000],
#     'test_accuracy': [0.2413, 0.3236, 0.391, 0.4602, 0.4958, 0.528, 0.5377, 0.5987, 0.6244, 0.5996, 0.6663, 0.6927, 0.7021, 0.7083, 0.7056, 0.712, 0.7195, 0.7029, 0.7187, 0.6863, 0.7102, 0.6713, 0.6988, 0.6393, 0.6214, 0.6046, 0.5942, 0.594, 0.5891, 0.5863, 0.5967, 0.5931, 0.5946, 0.5978, 0.5993, 0.6023, 0.6066, 0.6059, 0.6189, 0.6266, 0.6293, 0.6307, 0.6374, 0.6503, 0.6618, 0.6703, 0.6827, 0.6838, 0.686, 0.6876, 0.6749, 0.6789],
#     'train_accuracy': [0.2374181818181818, 0.3212, 0.3856181818181818, 0.4484363636363636, 0.4872909090909091, 0.5212363636363636, 0.5333272727272728, 0.5953272727272727, 0.6164181818181819, 0.6041636363636363, 0.6640181818181818, 0.6924, 0.7041090909090909, 0.7192727272727273, 0.7200363636363636, 0.7254181818181819, 0.7353454545454545, 0.7500727272727272, 0.7555636363636363, 0.7678181818181818, 0.7707090909090909, 0.7875090909090909, 0.7864181818181818, 0.8272727272727273, 0.8689636363636364, 0.9105272727272729, 0.9556, 0.9868545454545454, 0.9768363636363636, 0.9893090909090908, 0.9990727272727272, 0.998890909090909, 0.9979454545454546, 0.9983090909090908, 0.9997818181818182, 0.9995090909090908, 0.9999818181818182, 0.9998363636363636, 0.9999454545454546, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
#     # 'train_accuracy': [0.2348727272727272, 0.3145818181818182, 0.3734363636363636, 0.4286363636363636, 0.4932727272727272, 0.5253272727272728, 0.5652727272727273, 0.5881636363636363, 0.5822909090909091, 0.6178, 0.6792181818181818, 0.6996909090909091, 0.7061272727272727, 0.7238181818181818, 0.7295090909090909, 0.7297818181818182, 0.7462363636363636, 0.7502, 0.7628363636363636, 0.761109090909091, 0.7730363636363636, 0.7682545454545454, 0.7689818181818182, 0.7861272727272727, 0.7585090909090909, 0.7527818181818182, 0.7611454545454546, 0.7682545454545454, 0.7481454545454546, 0.7388727272727272, 0.7571272727272728, 0.7658545454545455, 0.7602545454545454, 0.7547090909090909, 0.7606, 0.7656727272727273, 0.7761818181818182, 0.7791818181818182, 0.7657272727272727, 0.7558909090909091, 0.7766545454545455, 0.7333454545454545, 0.7457818181818182],
#     # 'test_accuracy_best': [0.2349, 0.3261, 0.3845, 0.4423, 0.5067, 0.5309, 0.5718, 0.5972, 0.5861, 0.6201, 0.6762, 0.695, 0.6967, 0.7115, 0.7105, 0.7028, 0.7175, 0.7125, 0.707, 0.6992, 0.7002, 0.6945, 0.7016, 0.6762, 0.679, 0.6995, 0.6694, 0.6888, 0.6787, 0.688, 0.6963, 0.6977, 0.6745, 0.6738, 0.706, 0.6855, 0.7021, 0.6696, 0.7112, 0.6957, 0.6983, 0.6991],
#     # 'val_accuracy':  [0.2284, 0.3102, 0.3762, 0.4392, 0.495, 0.5234, 0.5676, 0.587, 0.5796, 0.6082, 0.673, 0.6848, 0.694, 0.702, 0.7042, 0.7026, 0.7098, 0.7142, 0.7074, 0.689, 0.6926, 0.6914, 0.6894, 0.6716, 0.671, 0.6956, 0.664, 0.679, 0.6748, 0.6762, 0.6936, 0.6972, 0.6714, 0.67, 0.7056, 0.6844, 0.696, 0.6634, 0.7096, 0.6926, 0.6914, 0.6912]
# }

# noise 0.10 with adam 0.001
data_last_epoch = {
    'Hidden Dimensions': [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 16, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 140, 150, 160, 170, 180, 190, 200, 300, 400, 500, 600, 700, 800, 900, 1000],
    'test_accuracy':[0.2396, 0.3578, 0.4155, 0.4949, 0.5709, 0.6657, 0.6937, 0.6963, 0.7149, 0.7676, 0.7975, 0.7978, 0.8096, 0.814, 0.8111, 0.8097, 0.7904, 0.7768, 0.7741, 0.7623, 0.7515, 0.7465, 0.747, 0.7626, 0.7561, 0.7466, 0.7619, 0.7747, 0.7652, 0.7694, 0.7729, 0.7789, 0.7819, 0.7843, 0.7937, 0.7937, 0.7895, 0.8005, 0.8071, 0.8028, 0.8049, 0.8081, 0.8175, 0.8156, 0.8169, 0.8202, 0.8254, 0.8214, 0.8227, 0.8227],
    'train_accuracy': [0.2553454545454545, 0.3566, 0.4052909090909091, 0.4957636363636363, 0.5489090909090909, 0.6506727272727273, 0.6878363636363637, 0.7038545454545454, 0.7051818181818181, 0.7727272727272727, 0.8050545454545455, 0.8117818181818182, 0.8294363636363636, 0.8510181818181818, 0.8634181818181819, 0.8694363636363637, 0.885, 0.8987636363636363, 0.9079090909090908, 0.9238363636363636, 0.9479454545454544, 0.9727818181818182, 0.9782181818181818, 0.9989636363636364, 0.9983090909090908, 0.9994545454545456, 0.9997818181818182, 1.0, 0.9999454545454546, 0.9999818181818182, 0.9999818181818182, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999818181818182, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
    'val_accuracy': [0.2582, 0.3612, 0.412, 0.4984, 0.5618, 0.6618, 0.6952, 0.697, 0.7084, 0.767, 0.7962, 0.799, 0.8092, 0.8118, 0.807, 0.8074, 0.7888, 0.78, 0.7694, 0.7652, 0.7496, 0.7504, 0.7546, 0.7596, 0.7562, 0.746, 0.7528, 0.7766, 0.7646, 0.7698, 0.7734, 0.776, 0.7824, 0.7904, 0.7962, 0.7894, 0.785, 0.7998, 0.8022, 0.8022, 0.8066, 0.8124, 0.8182, 0.8158, 0.8238, 0.824, 0.8196, 0.8232, 0.8242, 0.817]
    # 'train_accuracy': [0.2348727272727272, 0.3145818181818182, 0.3734363636363636, 0.4286363636363636, 0.4932727272727272, 0.5253272727272728, 0.5652727272727273, 0.5881636363636363, 0.5822909090909091, 0.6178, 0.6792181818181818, 0.6996909090909091, 0.7061272727272727, 0.7238181818181818, 0.7295090909090909, 0.7297818181818182, 0.7462363636363636, 0.7502, 0.7628363636363636, 0.761109090909091, 0.7730363636363636, 0.7682545454545454, 0.7689818181818182, 0.7861272727272727, 0.7585090909090909, 0.7527818181818182, 0.7611454545454546, 0.7682545454545454, 0.7481454545454546, 0.7388727272727272, 0.7571272727272728, 0.7658545454545455, 0.7602545454545454, 0.7547090909090909, 0.7606, 0.7656727272727273, 0.7761818181818182, 0.7791818181818182, 0.7657272727272727, 0.7558909090909091, 0.7766545454545455, 0.7333454545454545, 0.7457818181818182],
    # 'test_accuracy_best': [0.2349, 0.3261, 0.3845, 0.4423, 0.5067, 0.5309, 0.5718, 0.5972, 0.5861, 0.6201, 0.6762, 0.695, 0.6967, 0.7115, 0.7105, 0.7028, 0.7175, 0.7125, 0.707, 0.6992, 0.7002, 0.6945, 0.7016, 0.6762, 0.679, 0.6995, 0.6694, 0.6888, 0.6787, 0.688, 0.6963, 0.6977, 0.6745, 0.6738, 0.706, 0.6855, 0.7021, 0.6696, 0.7112, 0.6957, 0.6983, 0.6991],
    # 'val_accuracy':  [0.2284, 0.3102, 0.3762, 0.4392, 0.495, 0.5234, 0.5676, 0.587, 0.5796, 0.6082, 0.673, 0.6848, 0.694, 0.702, 0.7042, 0.7026, 0.7098, 0.7142, 0.7074, 0.689, 0.6926, 0.6914, 0.6894, 0.6716, 0.671, 0.6956, 0.664, 0.679, 0.6748, 0.6762, 0.6936, 0.6972, 0.6714, 0.67, 0.7056, 0.6844, 0.696, 0.6634, 0.7096, 0.6926, 0.6914, 0.6912]
}





df_last_epoch = pd.DataFrame(data_last_epoch)
df_last_epoch.to_csv('noise_0.20/last_epoch/accuracy_vs_hidden_dimensions.csv', index=False)

plt.figure(figsize=(15, 8))
plt.plot(df_last_epoch['Hidden Dimensions'], df_last_epoch['test_accuracy'],  label='Test Accuracy', color='red')
plt.plot(df_last_epoch['Hidden Dimensions'], df_last_epoch['train_accuracy'], label='Train Accuracy', color='blue')
plt.plot(df_last_epoch['Hidden Dimensions'], df_last_epoch['val_accuracy'],  label='Val Accuracy - best epoch', color='green')
plt.title('Results - accuracy curves - best epoch')
plt.xlabel('Hidden Dimensions')
plt.ylabel('accuracy')
plt.legend()
plt.xticks(range(0, 1100, 50), fontsize=10)
plt.grid(True)
plt.tight_layout() 
plt.savefig('noise_0.20/last_epoch/accuracy_vs_hidden_dimensions.png')  # Save the plot as an image file